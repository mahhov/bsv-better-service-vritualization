0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.15.9
3 info using node@v4.6.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/manukhovanesian/personal/bsv-better-service-virtualization',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/manukhovanesian/.npm/bsv-better-service-virtualization/0.0.6/package.tgz not in flight; packing
9 verbose correctMkdir /Users/manukhovanesian/.npm correctMkdir not in flight; initializing
10 verbose tar pack [ '/Users/manukhovanesian/.npm/bsv-better-service-virtualization/0.0.6/package.tgz',
10 verbose tar pack   '/Users/manukhovanesian/personal/bsv-better-service-virtualization' ]
11 verbose tarball /Users/manukhovanesian/.npm/bsv-better-service-virtualization/0.0.6/package.tgz
12 verbose folder /Users/manukhovanesian/personal/bsv-better-service-virtualization
13 info prepublish bsv-better-service-virtualization@0.0.6
14 verbose addLocalTarball adding from inside cache /Users/manukhovanesian/.npm/bsv-better-service-virtualization/0.0.6/package.tgz
15 verbose correctMkdir /Users/manukhovanesian/.npm correctMkdir not in flight; initializing
16 silly cache afterAdd bsv-better-service-virtualization@0.0.6
17 verbose afterAdd /Users/manukhovanesian/.npm/bsv-better-service-virtualization/0.0.6/package/package.json not in flight; writing
18 verbose correctMkdir /Users/manukhovanesian/.npm correctMkdir not in flight; initializing
19 verbose afterAdd /Users/manukhovanesian/.npm/bsv-better-service-virtualization/0.0.6/package/package.json written
20 silly publish { name: 'bsv-better-service-virtualization',
20 silly publish   version: '0.0.6',
20 silly publish   description: '## About',
20 silly publish   main: 'index.js',
20 silly publish   scripts:
20 silly publish    { buildBabel: 'babel src -d lib',
20 silly publish      build: 'browserify src/index.js -o browser/index.js' },
20 silly publish   author: { name: 'mahhov' },
20 silly publish   license: 'ISC',
20 silly publish   repository:
20 silly publish    { type: 'git',
20 silly publish      url: 'git+https://github.com/mahhov/bsv-better-service-vritualization.git' },
20 silly publish   devDependencies:
20 silly publish    { 'babel-cli': '^6.26.0',
20 silly publish      'babel-preset-env': '^1.6.1',
20 silly publish      browserify: '^16.1.0' },
20 silly publish   babel: { presets: [ 'env' ] },
20 silly publish   readme: '# BSV Better Service Virtualization\n\n## About\n\nRecord and replay fields and methods.\n\n## Usage Example\n\n```\n\n// set to either record or replay mode\nif (mockData) {\n    bsv.setModeReplay();\n    bsv.import(mockData);\n    bsv.setReplayDelay(500);\n    bsv.setCustomReplayDelay(\'repository1.carData\', 2500)\n} else {\n    bsv.setModeRecord();\n}\n\n// regsiter fields of interest\nbsv.registerField(\'window\', window, \'field1\');\nbsv.registerField(\'window\', window, \'field2\');\nbsv.registerField(\'car\', car, \'model\');\nbsv.registerField(\'car\', car, \'year\');\n\n// register methods of interest\nbsv.registerPromise(\'repository1.carData\', repository1, \'getCarData\');\nbsv.registerPromise(\'repository1.motorcycleData\', repository1, \'getMotorcycleData\');\nbsv.registerPromise(\'repository2.elevatorData\', repository2, \'getElevatorData\');\n\n```\n\n## Modes\n\n`bsv.setModeIgnore()`\n\nRegistered fields will be neither modified nor recorded. Registered methods will go through unmodified and unrecorded.\n\n`bsv.setModeRecord()` \n\nRegistered fields have their values recorded. Registered methods will have their resolution or rejection recorded.\n\n`bsv.setModeReplay()`\n\nRegistered fields will have their values assigned per imported values. Registered methods will resolve or reject per imported records.\n\nNotes:\n\n1. Once a `setMode...` method is invoked, it should not be reset.\n\n2. Until a mode is set, no action will be taken with `registerField` invocations. See note for _Fields_ section.\n\n3. Until a mode is set, promises returned by registered methods will be unresolved and unrejected. See note for _Methods_ section.\n\n## Delay\n\n`setReplayDelay(delay)` sets default delay for replaying methods. \n\n`setCustomReplayDelay(name, delay)` sets delay for replaying individual method. \n\n## Exporting\n\n`export()` (and alias `exportClipboard()`) copy to clipboard the recordings thus far.\n\n`exportObject()` will return a javascript object of the recordings thus far.\n\n`exportString()` will return a string representing the javascript object of the recordings thus far.\n\n`exportFile()` will download a file containing a json representation of the recordings thus far.\n\n## Importing\n\n`import(recordingsJson)` takes in a javascript object such as one that was exported, and uses this object for replays.\n\n## Fields\n\n`registerField(name, object, field)`\n\nValue of `object.field` is recorded or assigned by key `name`.\n\nNote, for recording, value of the field at the time of invoking `registerField` will be recorded, unless mode is not yet set, in which case, value at the time mode is set will be recorded.\n\nNote, for replaying, value will be assigned at the time of invoking `registerField`, unless mode is not yet set, in which case, value will be assigned when mode is set. \n\n## Methods\n\n`registerPromise(name, object, methodName)`\n\nFor record mode, every time the method is invoked, the resolved or rejected promise is recorded.\n\nFor replay mode, each time the method is invoked, a recorded promise resolution or rejection is replayed. If `n` records exist, record `1` will be returned  for first invocation, then record `2`, ... record `n`. For invocations after the `n\'`th invocation, record `n` will be returned.\n\nNote, if mode is not set, invocations of method will be unresolved and unrejected until a mode is set.',
20 silly publish   readmeFilename: 'readme.md',
20 silly publish   gitHead: '86c2bf62305acfbd599d1bbdcaff059a4a90a983',
20 silly publish   bugs: { url: 'https://github.com/mahhov/bsv-better-service-vritualization/issues' },
20 silly publish   homepage: 'https://github.com/mahhov/bsv-better-service-vritualization#readme',
20 silly publish   _id: 'bsv-better-service-virtualization@0.0.6',
20 silly publish   _shasum: 'ae6859bf95a31245c26f86a67eff372176903c94',
20 silly publish   _from: '.' }
21 verbose getPublishConfig undefined
22 silly mapToRegistry name bsv-better-service-virtualization
23 silly mapToRegistry using default registry
24 silly mapToRegistry registry https://registry.npmjs.org/
25 silly mapToRegistry data Result {
25 silly mapToRegistry   raw: 'bsv-better-service-virtualization',
25 silly mapToRegistry   scope: null,
25 silly mapToRegistry   name: 'bsv-better-service-virtualization',
25 silly mapToRegistry   rawSpec: '',
25 silly mapToRegistry   spec: 'latest',
25 silly mapToRegistry   type: 'tag' }
26 silly mapToRegistry uri https://registry.npmjs.org/bsv-better-service-virtualization
27 verbose publish registryBase https://registry.npmjs.org/
28 silly publish uploading /Users/manukhovanesian/.npm/bsv-better-service-virtualization/0.0.6/package.tgz
29 verbose request uri https://registry.npmjs.org/bsv-better-service-virtualization
30 verbose request sending authorization for write operation
31 info attempt registry request try #1 at 4:27:21 PM
32 verbose request using bearer token for auth
33 verbose request id a2baf728f1eb0a06
34 http request PUT https://registry.npmjs.org/bsv-better-service-virtualization
35 http 403 https://registry.npmjs.org/bsv-better-service-virtualization
36 verbose headers { 'content-type': 'application/json',
36 verbose headers   'cache-control': 'max-age=300',
36 verbose headers   'content-length': '93',
36 verbose headers   'accept-ranges': 'bytes',
36 verbose headers   date: 'Wed, 07 Mar 2018 00:27:24 GMT',
36 verbose headers   via: '1.1 varnish',
36 verbose headers   connection: 'keep-alive',
36 verbose headers   'x-served-by': 'cache-dfw18638-DFW',
36 verbose headers   'x-cache': 'MISS',
36 verbose headers   'x-cache-hits': '0',
36 verbose headers   'x-timer': 'S1520382443.186991,VS0,VE1498',
36 verbose headers   vary: 'Accept-Encoding, Accept' }
37 verbose request invalidating /Users/manukhovanesian/.npm/registry.npmjs.org/bsv-better-service-virtualization on PUT
38 error publish Failed PUT 403
39 verbose stack Error: You cannot publish over the previously published versions: 0.0.6. : bsv-better-service-virtualization
39 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
39 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
39 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
39 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:200:22)
39 verbose stack     at emitTwo (events.js:87:13)
39 verbose stack     at Request.emit (events.js:172:7)
39 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1067:10)
39 verbose stack     at emitOne (events.js:82:20)
39 verbose stack     at Request.emit (events.js:169:7)
39 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:988:12)
40 verbose statusCode 403
41 verbose pkgid bsv-better-service-virtualization
42 verbose cwd /Users/manukhovanesian/personal/bsv-better-service-virtualization
43 error Darwin 15.6.0
44 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
45 error node v4.6.0
46 error npm  v2.15.9
47 error code E403
48 error You cannot publish over the previously published versions: 0.0.6. : bsv-better-service-virtualization
49 error If you need help, you may report this error at:
49 error     <https://github.com/npm/npm/issues>
50 verbose exit [ 1, true ]
